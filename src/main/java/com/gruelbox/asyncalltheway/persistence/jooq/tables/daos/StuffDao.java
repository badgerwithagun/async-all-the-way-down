/*
 * This file is generated by jOOQ.
 */
package com.gruelbox.asyncalltheway.persistence.jooq.tables.daos;


import com.gruelbox.asyncalltheway.persistence.jooq.tables.Stuff;
import com.gruelbox.asyncalltheway.persistence.jooq.tables.records.StuffRecord;
import io.github.jklingsporn.vertx.jooq.completablefuture.async.AsyncCompletableFutureQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.async.AbstractAsyncVertxDAO;
import java.util.Collection;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.jooq.Configuration;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StuffDao extends AbstractAsyncVertxDAO<StuffRecord, com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff, String, CompletableFuture<List<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>>, CompletableFuture<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>, CompletableFuture<Integer>, CompletableFuture<String>> implements io.github.jklingsporn.vertx.jooq.completablefuture.VertxDAO<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the MYSQL types or POSTGRES.
     * @param vertx the vertx instance
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public StuffDao(Configuration configuration, io.vertx.core.Vertx vertx, io.vertx.ext.asyncsql.AsyncSQLClient delegate) {
        super(Stuff.STUFF, com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff.class, new AsyncCompletableFutureQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String>(configuration,vertx,delegate,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff::new, Stuff.STUFF));
    }

    @Override
    protected String getId(com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff object) {
        return object.getId();
    }

    /**
     * Find records that have <code>DATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>> findManyByData(Collection<String> values) {
        return findManyByCondition(Stuff.STUFF.DATA.in(values));
    }

    @Override
    public AsyncCompletableFutureQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String> queryExecutor(){
        return (AsyncCompletableFutureQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String>) super.queryExecutor();
    }
}
