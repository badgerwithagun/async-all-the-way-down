/*
 * This file is generated by jOOQ.
 */
package com.gruelbox.asyncalltheway.persistence.jooq.tables.daos;


import com.gruelbox.asyncalltheway.persistence.jooq.tables.Stuff;
import com.gruelbox.asyncalltheway.persistence.jooq.tables.records.StuffRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.reactivepg.ReactiveRXQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StuffDao extends AbstractReactiveVertxDAO<StuffRecord, com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff, String, Single<List<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>>, Single<Optional<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>>, Single<Integer>, Single<String>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public StuffDao(Configuration configuration, io.vertx.reactivex.sqlclient.SqlClient delegate) {
        super(Stuff.STUFF, com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff.class, new ReactiveRXQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String>(configuration,delegate,com.gruelbox.asyncalltheway.persistence.jooq.tables.mappers.RowMappers.getStuffMapper()));
    }

    @Override
    protected String getId(com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff object) {
        return object.getId();
    }

    /**
     * Find records that have <code>DATA IN (values)</code> asynchronously
     */
    public Single<List<com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff>> findManyByData(Collection<String> values) {
        return findManyByCondition(Stuff.STUFF.DATA.in(values));
    }

    @Override
    public ReactiveRXQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String> queryExecutor(){
        return (ReactiveRXQueryExecutor<StuffRecord,com.gruelbox.asyncalltheway.persistence.jooq.tables.pojos.Stuff,String>) super.queryExecutor();
    }
}
